name: Elixir CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions:
  contents: read
jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.15.7"
          otp-version: "26.2.3"

      # Cache Mix dependencies
      - name: Cache Mix dependencies
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-mix-deps-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-deps-

      # Cache Mix build artifacts
      - name: Cache Mix build
        uses: actions/cache@v4
        with:
          path: _build
          key: ${{ runner.os }}-mix-build-${{ hashFiles('**/mix.lock') }}-${{ hashFiles('**/*.ex') }}-${{ hashFiles('**/*.exs') }}
          restore-keys: |
            ${{ runner.os }}-mix-build-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-mix-build-

      # Cache Rust/Cargo dependencies
      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            native/*/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      # Cache PLT files for Dialyxir (if using dialyzer)
      - name: Cache PLT files
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-plt-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-plt-

      - run: mix deps.get
      - run: mix format --check-formatted
      - run: mix deps.unlock --check-unused
      - run: mix deps.compile
      - run: FORCE_BUILD=1 mix compile --warnings-as-errors
      - run: mix credo --strict
      - run: FORCE_BUILD=1 mix test